version: "3.5"

networks:
  app-net:
    driver: bridge

services:
  db:
    container_name: msp_postgres
    restart: always
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - app-net

  redis:
    container_name: msp-redis
    restart: always
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - app-net

  zookeeper:
    container_name: zookeeper
    restart: always
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-net

  kafka:
    container_name: kafka
    restart: always
    image: confluentinc/cp-server:7.3.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: "false"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    networks:
      - app-net

  control-center:
    container_name: control-center
    restart: always
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - app-net

  front_end:
    container_name: front_end
    restart: always
    build:
      context: ./front_end
      dockerfile: Dockerfile
    # environment: MUST be setted at .dockerfile for NextJS
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    networks:
      - app-net
    volumes:
      - ./front_end:/app

  payments_gateway:
    container_name: payments_gateway
    restart: always
    build:
      context: ./payments_gateway
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/processed_payments
      - PORT=3004
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
    ports:
      - "3004:3004"
    depends_on:
      - db
      - redis
      - kafka
      - control-center
    networks:
      - app-net
    volumes:
      - ./payments_gateway:/app

  api_pension_system:
    container_name: api_pension_system
    restart: always
    build:
      context: ./api_pension_system
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/pension_system
      - PORT=3003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
    ports:
      - "3003:3003"
    depends_on:
      - db
      - redis
      - kafka
      - control-center
    networks:
      - app-net
    volumes:
      - ./api_pension_system:/app
